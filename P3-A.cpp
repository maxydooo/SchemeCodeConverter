// Autogenerated Scheme to C++ Code
// File: P3-A.cpp
#include <iostream>
#include "Object.h"
using namespace std;

Object funky(Object p, Object ls){
	Object __RetVal;
	Object v = (	__RetVal = Object(2),  * p);

	if ((v <= 	__RetVal = Object(10))){
	if ((v > 	__RetVal = Object(5))){
((v + ) * (v - ))round ((v / (v % 	__RetVal = Object(3))))	}
	}
	else if (v == 	__RetVal = Object(11)){
listop ("cons", v, ls)	}
	else if (v < 	__RetVal = Object(13)){
listop ("cdar", ls)	}
	else if (numberp (v) || listp (ls)zerop (v)v){
v	}
	else if (	if (nullp (ls)){
	__RetVal = Object("empty")	}
else {
;
	return __RetVal;
}
int main (){
	Object __RetVal;
	if (((	__RetVal = Object(7) >= 	__RetVal = Object(5)) && !((	__RetVal = Object(5) >= 	__RetVal = Object(7))))){
	cout << 	(__RetVal = funky(	__RetVal = Object(5), 	__RetVal = Object("(a 5 hello world cons if display newline cadr and or not define let number? list? zero? null? string? + - / * modulo round = > < >= <= cond else )")));
;
	}
;
	cout << endl;
	return 0;
}
